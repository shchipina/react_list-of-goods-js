{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY","ALPHABET","LENGTH","App","useState","sortField","setSortField","reverseArray","setReverseArray","visibleGoods","goods","sort","first","second","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4BF,IAAMC,EAAU,CACdC,SAAU,WACVC,OAAQ,UAGGC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAlCR,SAA0BC,EAA1B,GAA+D,IAA5BL,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,aACtCE,EAAY,YAAOC,GAqBzB,OAnBIL,GACFI,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKL,EAAQC,SACX,OAAOW,EAAME,cAAcD,GAE7B,KAAKb,EAAQE,OACX,OAAOU,EAAMG,OAASF,EAAOE,OAE/B,QACE,OAAON,MAKXF,GACFE,EAAaO,UAGRP,EAYcQ,CACnBlB,EACA,CAAEM,YAAWE,iBAQf,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,WAAYf,IAAcL,EAAQC,WACtCoB,QAAS,kBAAMf,EAAaN,EAAQC,WAJtC,iCASA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYf,IAAcL,EAAQE,SACtCmB,QAAS,kBAAMf,EAAaN,EAAQE,SAJtC,4BASA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,YAAab,IACjBc,QAAS,kBAAMb,GAAiBD,IAJlC,sBAUGF,GAAaE,IACZ,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAxCO,WACjBf,EAAa,IACbE,GAAgB,IAmCR,sBAWN,6BAEIC,EAAaa,KAAI,SAAAC,GAAI,OACnB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC3GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.50898aed.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, { sortField, reverseArray }) {\n  const visibleGoods = [...goods];\n\n  if (sortField) {\n    visibleGoods.sort((first, second) => {\n      switch (sortField) {\n        case SORT_BY.ALPHABET:\n          return first.localeCompare(second);\n\n        case SORT_BY.LENGTH:\n          return first.length - second.length;\n\n        default:\n          return visibleGoods;\n      }\n    });\n  }\n\n  if (reverseArray) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nconst SORT_BY = {\n  ALPHABET: 'alphabet',\n  LENGTH: 'length',\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseArray, setReverseArray] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortField, reverseArray },\n  );\n\n  const resetGoods = () => {\n    setSortField('');\n    setReverseArray(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SORT_BY.ALPHABET })}\n          onClick={() => setSortField(SORT_BY.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SORT_BY.LENGTH })}\n          onClick={() => setSortField(SORT_BY.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !reverseArray })}\n          onClick={() => setReverseArray(!reverseArray)}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortField || reverseArray) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={resetGoods}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {\n          visibleGoods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}